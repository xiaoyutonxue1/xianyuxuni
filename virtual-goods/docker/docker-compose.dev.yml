services:
  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: vg-frontend-dev
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - backend

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    container_name: vg-backend-dev
    volumes:
      - ../backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/virtual_goods
      - JWT_SECRET=virtual-goods-api-secret-2024
      - JWT_REFRESH_SECRET=virtual-goods-api-refresh-secret-2024
      - JWT_EXPIRES_IN=7d
      - API_VERSION=v1
      - API_PREFIX=/api/v1
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14-alpine
    container_name: vg-postgres-dev
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual_goods
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    name: vg-postgres-data 